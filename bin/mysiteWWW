#!/usr/bin/env node

var app    = require('../app');
var config = require('../config');
var http   = require('http');

app.set('port', config.port);
app.enable('trust proxy');

var server = http.createServer(app);
server.listen(config.port);
server.on('error', onError);
server.on('listening', onListening);

function onListening() {
  console.log('Listening for requests on port %d', server.address().port)
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}
